name: Deploy IAM Server to Dev

# trigger: on push to `main` branch, AND only on changes to `iam/*` files
on:
  push:
    #TODO set to main
    branches: [github-actions]
    # paths:
    #   - "iam/*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # run tests
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Lerna Bootstrap
        run: lerna bootstrap
      - name: Run Tests
        run: |
          yarn test:iam
          yarn test:identity
      - name: Run Linter
        run: |
          yarn lint:iam
          yarn lint:identity
      # get sha shorthand
      - name: Declare some variables
        id: vars
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      # build new image
      - run: docker build -t ${{secrets.ECR_URL}}:${{steps.vars.outputs.sha_short}} -f iam/Dockerfile .
      # push to ecr/dockerhub
      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1
          image: ${{secrets.ECR_URL}}:${{steps.vars.outputs.sha_short}}
    outputs:
      dockerTag: ${{ steps.vars.outputs.sha_short }}

  deploy-dev:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: "yarn"
          cache-dependency-path: infra/review/package-lock.json
      # Install pulumi dependencies
      # Select the new pulumi stack
      - run: |
          npm install
          pulumi stack select -c gitcoin/dpopp/review
          pulumi config -s gitcoin/dpopp/review set aws:region us-east-1 --non-interactive
        working-directory: infra/review
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      # Run pulumi actions
      # update dev cluster with new image [pulumi up]
      - uses: pulumi/actions@v3
        id: pulumi
        with:
          command: up
          stack-name: gitcoin/dpopp/review
          upsert: false
          work-dir: infra/review
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DOCKER_GTC_WEB_IMAGE: ${{ needs.build-and-test.outputs.dockerTag }}
          ROUTE_53_ZONE: ${{ secrets.ROUTE53_ZONE_ID }}
          DOMAIN: ${{ secrets.DOMAIN }}
          IAM_SERVER_SSM_ARN: ${{ secrets.IAM_SERVER_SSM_ARN }}
